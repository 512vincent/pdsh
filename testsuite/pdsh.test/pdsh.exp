set pdsh "$objdir/src/pdsh/pdsh"

#
#  Procedure for tests that run pdsh -Qw and check output:
#
proc test_wcoll { test args result {extra_args ""} }  {
	global pdsh
	spawn $pdsh -Qw "$args" $extra_args
    expect {
		"$result" { pass "$test" }
		eof       { fail "$test" }
	}
	wait -nowait
}

set test "pdsh: version (if this fails beware that testsuite is outdated)"
spawn $pdsh -V
expect  {
	-re "pdsh-2.22"		        { pass "$test" }
	eof				{ fail "$test" }
}

set test "pdsh: xstrerrorcat obtains text for errnos (gnats:35)"
spawn $pdsh -T 0
expect  {
	-re ".*PASS"			{ pass "$test" }
	-re ".*FAIL"			{ fail "$test" }
	-re ".*UNSUPPORTED"		{ unsupported "$test" }
	-re ".*unknown"			{ unsupported "$test" }
}

test_wcoll "pdsh: hostname range expansion works" \
	"foo\[0-3\]" \
	"foo0,foo1,foo2,foo3"

test_wcoll "pdsh: hostname range expansion does not strip leading zeros" \
	"foo\[00-02\]" \
	"foo00,foo01,foo02"

test_wcoll "pdsh: hostname range expansion handles mixed size suffixes" \
	"foo\[9-11\]" \
	"foo9,foo10,foo11"

test_wcoll "pdsh: hostname range expansion works with ',' embedded in range" \
	"foo\[0-2,4\]" \
	"foo0,foo1,foo2,foo4"

test_wcoll "pdsh: -x option works" \
	"foo\[9-11\]" \
	"foo9,foo11" \
	"-x foo10"

test_wcoll "pdsh: -x option works with ranges (gnats:118)" \
	"foo\[0-5\]" \
	"foo0,foo4,foo5" \
	"-x foo\[1-3\]"

test_wcoll "pdsh: -x option works with non-numeric suffixes (gnats:120)" \
	"fooi,fooj,foo\[0-5\]" \
	"foo0,foo1,foo3,foo4,foo5" \
	"-x fooj,fooi,foo2"


set test "pdsh: ranges can be embedded in wcoll files"
spawn $pdsh -Qw-
send "foo\[9-11\]\n"
send \004
expect  {
	-re "foo9,foo10,foo11"		{ pass "$test" }
	eof	 			{ fail "$test" }
}
