set pdsh "$objdir/pdsh"

expect_after {
	timeout				{ unresolved "$test" }
	eof				{ unresolved "$test" }
}

set test "pdsh: version (if this fails beware that testsuite is outdated)"
spawn $pdsh -V
expect {
	-re "pdsh-1.6.*"		{ pass "$test" }
	eof				{ fail "$test" }
}

set test "pdsh: xstrerrorcat obtains text for errnos (gnats:35)"
spawn $pdsh -T 0
expect  {
	-re ".*PASS"			{ pass "$test" }
	-re ".*FAIL"			{ fail "$test" }
	-re ".*UNSUPPORTED"		{ unsupported "$test" }
	-re ".*unknown"			{ unsupported "$test" }
}

set test "pdsh: hostname range expansion works"
spawn $pdsh -qw foo0-2
expect  {
	-re "foo0,foo1,foo2" 		{ pass "$test" }
	eof	 			{ fail "$test" }
}

set test "pdsh: hostname range expansion does not strip leading zeros"
spawn $pdsh -qw foo00-02
expect  {
	-re "foo00,foo01,foo02"		{ pass "$test" }
	eof	 			{ fail "$test" }
}

set test "pdsh: hostname range expansion handles mixed size suffixes"
spawn $pdsh -qw foo9-11
expect  {
	-re "foo9,foo10,foo11"		{ pass "$test" }
	eof	 			{ fail "$test" }
}

set test "pdsh: -x option works"
spawn $pdsh -qw foo9-11 -x foo10
expect  {
	-re "foo9,foo11"		{ pass "$test" }
	eof	 			{ fail "$test" }
}

set test "pdsh: ranges can be embedded in wcoll files"
spawn $pdsh -qw-
send "foo9-11\n"
send \004
expect  {
	-re "foo9,foo10,foo11"		{ pass "$test" }
	eof	 			{ fail "$test" }
}
