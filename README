+-------------+
| Description |
+-------------+
Pdsh is a multithreaded remote shell client which executes commands
on multiple remote hosts in parallel.  Pdsh can use several different remote
shell services, including standard "rsh", Kerberos IV, and ssh.

See the man page in this directory for usage information.

+---------------+
| Configuration |
+---------------+
As of version 1.6, pdsh uses GNU autoconf for configuration.  To configure:

./configure

The following features are not enabled by default:

--with-ssh[=/path/to/ssh/program]
	Use SSH as the primary remote shell type.  This is not recommended
	unless you cannot enable rsh root equivalence between nodes.
	SSH has not been tested extensively.  There will be no configurable
	connect timeout.  SSH will be run with no controlling tty, so if it
	needs to prompt for a password or a "man in the middle" message, it
	will fail.  By default, configure will search for a program named
	"ssh".  If you prefer ssh2, specify its full path as the argument
	to --with-ssh, e.g. --with-ssh=/usr/local/bin/ssh2.

--with-krb4[=/path/to/krb4/root]
	Use Kerberos IV as the primary remote shell type.  This is not 
	recommended unless you are running on an SP and cannot enable rsh 
	root equivalence between nodes.  Kerberos IV has not been extensively
	tested.  The action of refreshing TGT's is very slow under pdsh.

--with-machines=/path/to/machines
	Use a flat file list of machine names for -a instead of nodeattr
	or SDRGetObjects.  You must specify this option if you do not have
	nodeattr or SDRGetObjects (see below).

--with-elan
	Enable support for running parallel jobs on the Quadrics Elan 
	interconnect via the -E option and qshell daemon.

--with-rms
	Enable support for the RMS partition manager (Quadrics resource 
	management system).  If no explicit hostnames are targeted, the
	"-N nodes -n cpus" options may be used to allocate available nodes
	from RMS.

--enable-debug
	Turns on assertion checking and compiles with -Wall.

A word about -a (target "all" nodes) and -i (use alternate hostnames) option:

On an SP, configure will find SDRGetObjects and use that to generate the
list of "all" nodes for -a (reliable_hostname), transform to alternate 
hostnames with -i (initial_hostname), etc..

If SDRGetObjects is not found and if the LLNL Genders software is available, 
configure will find the nodeattr command and use that to generate the list 
of "all" nodes for -a ("all" attribute), transform to alternate hostnames 
with -i (altname=name), etc.. 

If neither of the above are found, a flat list of hostnames can be used for
the list of "all" nodes.  Specify the location of this file using the 
--with-machines configure option.

+------------+
| INSTALLING |
+------------+
make
make install

+---------+
| GOTCHAS |
+---------+

Watch out for the following gotchas:

1) Pdsh uses one reserved socket for each active connection, two if it is 
maintaining a separate connection for stderr.  It obtains these sockets
by calling rresvport(), which normally draws from a pool of 256 sockets.
You may exhaust these if multiple pdsh's are running simultanously on
a machine, or if the fanout is set too high.

2) When pdsh is configured to use rsh, and rsh is wrapped with TCP wrappers,
there are two areas where bottlenecks can be created: IDENT and DNS.
If your hosts.allow includes {users}@, e.g.  "in.rshd : ALL@ALL : ALLOW"
and tcp wrappers is configured to support IDENT, each simultaneous rsh 
connection will result in an IDENT query back to the source.  For large fanouts
this can quickly overwhelm the source.  Similarly, if TCP wrappers is
configured to query the DNS on every rsh connection, there is the possibility
of overwhelming the DNS server.  Consider either reducing the pdsh fanout,
or if security permits, unconfiguring the PARANOID option and using
IP addresses in your hosts.allow.

+---------------------+
| THEORY OF OPERATION |
+---------------------+
A separate thread is created for each rsh connection to a node.  Each thread 
opens a connection to a node using an MT-safe rcmd() or kcmd() [kerberos IV] 
function, then copies stdin/stderr and terminates.

The main thread starts fanout number of rsh threads and waits on a condition
variable that is signalled by the rsh threads as they terminate.  When 
the condition variable is signalled, the main thread starts a new rsh thread
to maintain the fanout (until all the nodes have been contacted).

A special timeout thread is created that monitors the state of the threads and
terminates any that take too much time connecting or (optionally) executing the
remote command.

Typing ^C causes pdsh to list threads that are in the connected state.
Another ^C immediately following the first one terminates the program.

+--------+
| AUTHOR |
+--------+
Jim Garlick <garlick@llnl.gov>

Please send suggestions, bug reports, or just a note letting me know that you
are using pdsh (it would be interesting to hear how many nodes are in your 
cluster).

+------+
| NOTE |
+------+
This product includes software developed by the University of California, 
Berkeley and its contributors [rcmd.c, k4cmd.c].  Modifications have been
made, however, and bugs are probably mine.

The PDSH software package has no affiliation with the Democratic Party of 
Albania (www.pdsh.org).
