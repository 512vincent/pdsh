+-------------+
| Description |
+-------------+
Pdsh is a multithreaded remote shell client which executes commands
on multiple remote hosts in parallel.  Pdsh can use several different remote
shell services, including standard "rsh", Kerberos IV, and ssh.

See the man page in this directory for usage information.

+---------------+
| Configuration |
+---------------+
As of version 1.6, pdsh uses GNU autoconf for configuration.  To configure:

./configure

The following features are not enabled by default:

--with-ssh
	Use SSH as the primary remote shell type.  This is not recommended
	unless you cannot enable rsh root equivalence between nodes.
	SSH has not been tested extensively.  There will be no configurable
	connect timeout.  SSH will be run with no controlling tty, so if it
	needs to prompt for a password or a "man in the middle" message, it
	will fail.

--with-krb4[=/path/to/krb4/root]
	Enable Kerberos IV support.  This is not recommended unless you are
	running on an SP and cannot enable rsh root equivalence between nodes.

--with-elan
	Enable support for running parallel jobs on the Quadrics Elan 
	interconnect via the -E option and qshell daemon.

--with-rms
	Enable support for the RMS partition manager (Quadrics resource 
	management system).  Instead of the usual pdsh methods of specifying 
	target nodes, specify -N cpus and/or -n nodes and have the nodes be 
	allocated via RMS.

--enable-debug
	Turns on assertion checking and compiles with -Wall.

A word about generating targetting "all" nodes in a cluster:

On an SP, configure will find SDRGetObjects and use that to generate the
list of "all" nodes for -a, transform to alternate hostnames with -i, 
etc..

On Linux and other platforms, -a, -i, etc.. are handled differently.
If the LLNL Genders software is available, the "nodeattr" command will
be used, with the special "altname" attribute for alternate hostnames.  
If that is not found, an MPICH machines file can be used (it is currently 
hard coded to /usr/local/etc/machines).

+------------+
| INSTALLING |
+------------+
make
make install

+---------------------+
| THEORY OF OPERATION |
+---------------------+
A separate thread is created for each rsh connection to a node.  Each thread 
opens a connection to a node using an MT-safe rcmd() or kcmd() [kerberos IV] 
function, then copies stdin/stderr and terminates.

The main thread starts fanout number of rsh threads and waits on a condition
variable that is signalled by the rsh threads as they terminate.  When 
the condition variable is signalled, the main thread starts a new rsh thread
to maintain the fanout (until all the nodes have been contacted).

A special timeout thread is created that monitors the state of the threads and
terminates any that take too much time connecting or (optionally) executing the
remote command.

Typing ^C causes pdsh to list threads that are in the connected state.
Another ^C immediately following the first one terminates the program.

+--------+
| AUTHOR |
+--------+
Jim Garlick <garlick@llnl.gov>

Please send suggestions, bug reports, or just a note letting me know that you
are using pdsh (it would be interesting to hear how many nodes are in your 
cluster).

+------+
| NOTE |
+------+
This product includes software developed by the University of California, 
Berkeley and its contributors [rcmd.c, k4cmd.c].  Modifications have been
made, however, and bugs are probably mine.

The PDSH software package has no affiliation with the Democratic Party of 
Albania (www.pdsh.org).
